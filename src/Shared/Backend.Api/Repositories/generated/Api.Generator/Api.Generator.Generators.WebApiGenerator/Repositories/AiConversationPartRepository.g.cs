//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Backend.Api.Services.Auth;
using Backend.Api.Services.Base;

namespace Backend.Api
{
    [Codelisk.GeneratorAttributes.GeneralAttributes.Registration.RegisterSingleton]
    public partial class AiConversationPartRepository : BaseAuthRepository<IAiConversationPartApi>, IAiConversationPartRepository
    {
        public AiConversationPartRepository(IAuthenticationService authenticationService, IBaseRepositoryProvider baseRepositoryProvider)
            : base(authenticationService, baseRepositoryProvider)
        {
        }

        public Task<AiConversationPartDto> Add(AiConversationPartDto aiConversationPartDto)
        {
            return TryRequest(() => _repositoryApi.Add(aiConversationPartDto));
        }

        public Task AddRange(System.Collections.Generic.List<AiConversationPartDto> aiConversationPartDtoList)
        {
            return JustSend(() => _repositoryApi.AddRange(aiConversationPartDtoList));
        }

        public Task Delete(Guid id)
        {
            return JustSend(() => _repositoryApi.Delete(id));
        }

        public Task<AiConversationPartDto> Get(Guid id)
        {
            return TryRequest(() => _repositoryApi.Get(id));
        }

        public Task<List<AiConversationPartDto>> GetAll()
        {
            return TryRequest(() => _repositoryApi.GetAll());
        }

        public Task<List<AiConversationPartFull>> GetAllFull()
        {
            return TryRequest(() => _repositoryApi.GetAllFull());
        }

        public Task<AiConversationPartFull> GetFull(Guid id)
        {
            return TryRequest(() => _repositoryApi.GetFull(id));
        }

        public Task<AiConversationPartDto> GetLast()
        {
            return TryRequest(() => _repositoryApi.GetLast());
        }

        public Task<AiConversationPartDto> Save(AiConversationPartDto aiConversationPartDto)
        {
            return TryRequest(() => _repositoryApi.Save(aiConversationPartDto));
        }
    }

    public partial interface IAiConversationPartRepository
    {
        Task<AiConversationPartDto> Add(AiConversationPartDto aiConversationPartDto);

        Task AddRange(System.Collections.Generic.List<AiConversationPartDto> aiConversationPartDtoList);

        Task Delete(Guid id);

        Task<AiConversationPartDto> Get(Guid id);

        Task<List<AiConversationPartDto>> GetAll();

        Task<List<AiConversationPartFull>> GetAllFull();

        Task<AiConversationPartFull> GetFull(Guid id);

        Task<AiConversationPartDto> GetLast();

        Task<AiConversationPartDto> Save(AiConversationPartDto aiConversationPartDto);
    }
}
